/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from "./routes/__root";
import { Route as AuthForgotPasswordRouteImport } from "./routes/auth.forgot-password";
import { Route as AuthLoginRouteImport } from "./routes/auth.login";
import { Route as AuthRegisterRouteImport } from "./routes/auth.register";
import { Route as IndexRouteImport } from "./routes/index";

const IndexRoute = IndexRouteImport.update({
	id: "/",
	path: "/",
	getParentRoute: () => rootRouteImport,
} as any);
const AuthRegisterRoute = AuthRegisterRouteImport.update({
	id: "/auth/register",
	path: "/auth/register",
	getParentRoute: () => rootRouteImport,
} as any);
const AuthLoginRoute = AuthLoginRouteImport.update({
	id: "/auth/login",
	path: "/auth/login",
	getParentRoute: () => rootRouteImport,
} as any);
const AuthForgotPasswordRoute = AuthForgotPasswordRouteImport.update({
	id: "/auth/forgot-password",
	path: "/auth/forgot-password",
	getParentRoute: () => rootRouteImport,
} as any);

export interface FileRoutesByFullPath {
	"/": typeof IndexRoute;
	"/auth/forgot-password": typeof AuthForgotPasswordRoute;
	"/auth/login": typeof AuthLoginRoute;
	"/auth/register": typeof AuthRegisterRoute;
}
export interface FileRoutesByTo {
	"/": typeof IndexRoute;
	"/auth/forgot-password": typeof AuthForgotPasswordRoute;
	"/auth/login": typeof AuthLoginRoute;
	"/auth/register": typeof AuthRegisterRoute;
}
export interface FileRoutesById {
	__root__: typeof rootRouteImport;
	"/": typeof IndexRoute;
	"/auth/forgot-password": typeof AuthForgotPasswordRoute;
	"/auth/login": typeof AuthLoginRoute;
	"/auth/register": typeof AuthRegisterRoute;
}
export interface FileRouteTypes {
	fileRoutesByFullPath: FileRoutesByFullPath;
	fullPaths: "/" | "/auth/forgot-password" | "/auth/login" | "/auth/register";
	fileRoutesByTo: FileRoutesByTo;
	to: "/" | "/auth/forgot-password" | "/auth/login" | "/auth/register";
	id:
		| "__root__"
		| "/"
		| "/auth/forgot-password"
		| "/auth/login"
		| "/auth/register";
	fileRoutesById: FileRoutesById;
}
export interface RootRouteChildren {
	IndexRoute: typeof IndexRoute;
	AuthForgotPasswordRoute: typeof AuthForgotPasswordRoute;
	AuthLoginRoute: typeof AuthLoginRoute;
	AuthRegisterRoute: typeof AuthRegisterRoute;
}

declare module "@tanstack/react-router" {
	interface FileRoutesByPath {
		"/": {
			id: "/";
			path: "/";
			fullPath: "/";
			preLoaderRoute: typeof IndexRouteImport;
			parentRoute: typeof rootRouteImport;
		};
		"/auth/register": {
			id: "/auth/register";
			path: "/auth/register";
			fullPath: "/auth/register";
			preLoaderRoute: typeof AuthRegisterRouteImport;
			parentRoute: typeof rootRouteImport;
		};
		"/auth/login": {
			id: "/auth/login";
			path: "/auth/login";
			fullPath: "/auth/login";
			preLoaderRoute: typeof AuthLoginRouteImport;
			parentRoute: typeof rootRouteImport;
		};
		"/auth/forgot-password": {
			id: "/auth/forgot-password";
			path: "/auth/forgot-password";
			fullPath: "/auth/forgot-password";
			preLoaderRoute: typeof AuthForgotPasswordRouteImport;
			parentRoute: typeof rootRouteImport;
		};
	}
}

const rootRouteChildren: RootRouteChildren = {
	IndexRoute: IndexRoute,
	AuthForgotPasswordRoute: AuthForgotPasswordRoute,
	AuthLoginRoute: AuthLoginRoute,
	AuthRegisterRoute: AuthRegisterRoute,
};
export const routeTree = rootRouteImport
	._addFileChildren(rootRouteChildren)
	._addFileTypes<FileRouteTypes>();
